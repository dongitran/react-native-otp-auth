/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('twilio/lib/base/Page');
import Response = require('twilio/lib/http/response');
import V1 = require('twilio/lib/rest/bulkexports/V1');
import { DayList } from 'twilio/lib/rest/bulkexports/v1/export/day';
import { DayListInstance } from 'twilio/lib/rest/bulkexports/v1/export/day';
import { ExportCustomJobList } from 'twilio/lib/rest/bulkexports/v1/export/exportCustomJob';
import { ExportCustomJobListInstance } from 'twilio/lib/rest/bulkexports/v1/export/exportCustomJob';
import { JobListInstance } from 'twilio/lib/rest/bulkexports/v1/export/job';
import { SerializableClass } from 'twilio/lib/interfaces';

/**
 * Initialize the ExportList
 *
 * @param version - Version of the resource
 */
declare function ExportList(version: V1): ExportListInstance;

interface ExportListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): ExportContext;
  /**
   * Constructs a export
   *
   * @param resourceType - The type of communication – Messages, Calls, Conferences, and Participants
   */
  get(resourceType: string): ExportContext;
  jobs?: JobListInstance;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

interface ExportPayload extends ExportResource, Page.TwilioResponsePayload {
}

interface ExportResource {
  links: string;
  resource_type: string;
  url: string;
}

interface ExportSolution {
}


declare class ExportContext {
  /**
   * Initialize the ExportContext
   *
   * @param version - Version of the resource
   * @param resourceType - The type of communication – Messages, Calls, Conferences, and Participants
   */
  constructor(version: V1, resourceType: string);

  days: DayListInstance;
  exportCustomJobs: ExportCustomJobListInstance;
  /**
   * fetch a ExportInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: ExportInstance) => any): Promise<ExportInstance>;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}


declare class ExportInstance extends SerializableClass {
  /**
   * Initialize the ExportContext
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param resourceType - The type of communication – Messages, Calls, Conferences, and Participants
   */
  constructor(version: V1, payload: ExportPayload, resourceType: string);

  private _proxy: ExportContext;
  /**
   * Access the days
   */
  days(): DayListInstance;
  /**
   * Access the exportCustomJobs
   */
  exportCustomJobs(): ExportCustomJobListInstance;
  /**
   * fetch a ExportInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: ExportInstance) => any): Promise<ExportInstance>;
  links: string;
  resourceType: string;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  url: string;
}


declare class ExportPage extends Page<V1, ExportPayload, ExportResource, ExportInstance> {
  /**
   * Initialize the ExportPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: V1, response: Response<string>, solution: ExportSolution);

  /**
   * Build an instance of ExportInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: ExportPayload): ExportInstance;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

export { ExportContext, ExportInstance, ExportList, ExportListInstance, ExportPage, ExportPayload, ExportResource, ExportSolution }
